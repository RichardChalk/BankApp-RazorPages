@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul>
@if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link" style="color:#ffc451" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-light"><i class="fas fa-arrow-circle-left"></i>&nbsp; Logout</button>
            </form>
        </li>
    }
    else
    {
        @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "Admin"))
        {
            <li class="nav-item text-center">
                <a class="nav-link get-started-btn mx-3" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-plus-circle"></i> &nbsp; Register</a>
            </li>     
        }
       
        <li class="nav-item">
            <a class="nav-link get-started-btn" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-arrow-circle-right"></i> &nbsp; Login</a>
        </li>
    }
</ul>
